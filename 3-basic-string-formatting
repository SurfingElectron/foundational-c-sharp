// PERFORM BASIC STRING FORMATTING IN C#

// EXERCISE 1: FORMAT OUTPUT USING CHARACTER ESCAPE SEQUENCES
Console.WriteLine("Generating invoives for customer \"Contoso Corp\" ...\n");
Console.WriteLine("Invoice: 1021\t\t Complete!");
Console.WriteLine("Invoice: 2022\t\t Complete!");
Console.WriteLine("\nOutput Directory:\t");

Console.Write(@"c:\invoices");

// To generate Japanese invoices:
// Nihon no seikyÅ«-sho o seisei suru ni wa:
Console.Write("\n\n\u65e5\u672c\u306e\u8acb\u6c42\u66f8\u3092\u751f\u6210\u3059\u308b\u306b\u306f\uff1a\n\t");
// User command to run an application
Console.WriteLine(@"c:\invoices\app.exe -j");


// EXERCISE 2: COMBINE STRINGS USING STRING CONCATENATION
string firstName = "Bob";
string greeting = "Hello";

Console.WriteLine(greeting + " " + firstName + "!");


// EXERCISE: COMBINE STRINGS USING STRING INTERPOLATION
// Part 1
int version = 11;
string updateText = "Update to Windows";
Console.WriteLine($"{updateText} {version}!");

// Part 2
string projectName = "First-Project";
Console.WriteLine($@"C:\Output\{projectName}\Data");

// CHALLENGE: FORMAT AND DISPLAY INSTRUCTIONS
string projectName = "ACME";
string russianMessage = "\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u0432\u044b\u0432\u043e\u0434";

Console.WriteLine($@"View English output:
    c:\Exercise\{projectName}data.txt
    "
);

Console.WriteLine($@"{russianMessage}
    c:\Exercise\{projectName}data.txt"
);

// Suggested solution
// string projectName = "ACME";
// string englishLocation = $@"c:\Exercise\{projectName}\data.txt";
// Console.WriteLine($"View English output:\n\t\t{englishLocation}\n");

// string russianMessage = "\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u0432\u044b\u0432\u043e\u0434";
// string russianLocation = $@"c:\Exercise\{projectName}\ru-RU\data.txt";
// Console.WriteLine($"{russianMessage}:\n\t\t{russianLocation}\n");